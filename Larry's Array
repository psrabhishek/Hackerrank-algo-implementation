//https://www.hackerrank.com/challenges/larrys-array/problem

/*It is based upon the inversions.(An inversion is when a tile precedes another tile with a lower number on it).
This questions is solvable only if no of inversions is even.
it is similar to 15 tiles problem: https://www.cs.bham.ac.uk/~mdr/teaching/modules04/java2/TilesSolvability.html*/

#include <bits/stdc++.h>

using namespace std;

int main() 
{
    int t,n;
    cin >> t;
    int count,i,j;
    for(int a0 = 0; a0 < t; a0++)
    {
        count=0;
        cin >> n;
        int a[n];
        //input
        for(i=0; i < n; i++)
           cin >> a[i];
        //store the no of inversions in count   
        for(i=0;i<n;i++)
            for(j=i+1;j<n;j++)
                if(a[i]>a[j])
                    count++;
        //solvable only if no of inversions is even            
        if(count%2==0)
            cout << "YES" << endl;
        else
            cout<< "NO" <<endl;
    }
    return 0;
}
